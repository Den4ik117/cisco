[
  {
    "Name": "Верно ли определение:\n\nОперационная система (ОС) — это набор программ, которые обеспечивают возможность использования аппаратуры компьютера.",
    "Answers": [
      {
        "Name": "да",
        "IsAnswer": true
      },
      {
        "Name": "нет",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Должна ли ОС управлять ресурсами компьютера?",
    "Answers": [
      {
        "Name": "да",
        "IsAnswer": true
      },
      {
        "Name": "нет",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какое количество малосвязанных функций ОС можно выделить из определения ОС?",
    "Answers": [
      {
        "Name": "2. Обеспечение пользователю-программисту удобств посредством предоставления для него расширенной машины. Повышение эффективности использования компьютера путем рационального управления его ресурсами.",
        "IsAnswer": true
      }
    ]
  },
  {
    "Name": "Основная функция ОС — эффективное управление ресурсами компьютера",
    "Answers": []
  },
  {
    "Name": "В чем удобства современных ОС для прикладного программиста?",
    "Answers": [
      {
        "Name": "Независимость от устройств и производителей",
        "IsAnswer": true
      },
      {
        "Name": "ОС организует управление ресурсами компьютера",
        "IsAnswer": false
      },
      {
        "Name": "Время человека дороже времени ЭВМ",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Укажите верную задачу ОС по управлению ресурсами:",
    "Answers": [
      {
        "Name": "Разрешение конфликтов между потребителями ресурсов",
        "IsAnswer": true
      },
      {
        "Name": "Повышение эффективности использования компьютера",
        "IsAnswer": false
      },
      {
        "Name": "Предоставление пользователю расширенной машины",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К модулям ядра относятся:",
    "Answers": [
      {
        "Name": "Модули управления памятью",
        "IsAnswer": true
      },
      {
        "Name": "Системные обрабатывающие программы",
        "IsAnswer": false
      },
      {
        "Name": "Аппаратные модули",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что позволяет достичь модульности при построении ОС?",
    "Answers": [
      {
        "Name": "Легкая расширяемость ОС",
        "IsAnswer": true
      },
      {
        "Name": "Ускорение разработки ОС",
        "IsAnswer": false
      },
      {
        "Name": "Возможность быстрой замены одной ОС на другую",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Для надежного управления ходом выполнения приложений операционная система должна:",
    "Answers": [
      {
        "Name": "Иметь по отношению к приложениям определенные привилегии",
        "IsAnswer": true
      },
      {
        "Name": "Иметь подсистему управления процессором",
        "IsAnswer": false
      },
      {
        "Name": "Предоставлять привилегии выполняемым приложениям",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Программы сжатия диска относятся к:",
    "Answers": [
      {
        "Name": "Утилитам",
        "IsAnswer": true
      },
      {
        "Name": "Системным обрабатывающим программам",
        "IsAnswer": false
      },
      {
        "Name": "Модулю управления устройствами ввода-вывода",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Для чего стоит использовать классификацию ОС?",
    "Answers": [
      {
        "Name": "Для выбора правильной ОС под конкретную задачу",
        "IsAnswer": true
      },
      {
        "Name": "Для определения слабых и сильных сторон конкретной ОС",
        "IsAnswer": false
      },
      {
        "Name": "Для отслеживания эволюции современных ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Самым нижним слоем вычислительной системы является:",
    "Answers": [
      {
        "Name": "Аппаратные модули",
        "IsAnswer": true
      },
      {
        "Name": "Ядро ОС",
        "IsAnswer": false
      },
      {
        "Name": "Системные обрабатывающие программы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К операционной системе относятся:",
    "Answers": [
      {
        "Name": "Средства аппаратной поддержки ОС",
        "IsAnswer": true
      },
      {
        "Name": "Аппаратные модули",
        "IsAnswer": false
      },
      {
        "Name": "Пользователи ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Как называется слой ядра, взаимодействующий непосредственно с программами?",
    "Answers": [
      {
        "Name": "Интерфейс системных вызовов",
        "IsAnswer": true
      },
      {
        "Name": "Базовые механизмы ядра",
        "IsAnswer": false
      },
      {
        "Name": "Менеджеры ресурсов",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Многослойная структура ядра…",
    "Answers": [
      {
        "Name": "Существенно упрощает разработку ОС",
        "IsAnswer": true
      },
      {
        "Name": "Позволяет постепенно наращивать функции слоев",
        "IsAnswer": true
      },
      {
        "Name": "дает возможность управлять ресурсами ВС иерархическим способом",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Имеют ли пользовательские программы непосредственный доступ к функциям ядра ОС?",
    "Answers": [
      {
        "Name": "нет",
        "IsAnswer": true
      },
      {
        "Name": "да",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К какой фазе развития вычислительных систем относится утверждение: с ВС работает один пользователь в один момент времени и работа осуществляется напрямую с консолью?",
    "Answers": [
      {
        "Name": "К первой фазе — время ЭВМ дороже времени человека",
        "IsAnswer": true
      },
      {
        "Name": "Ко второй фазе — время человека дороже времени ЭВМ",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Принцип, что операционная система скрывает все аспекты аппаратуры компьютера, относится к:",
    "Answers": [
      {
        "Name": "предоставлению пользователю некоторой расширенной или виртуальной машины",
        "IsAnswer": true
      },
      {
        "Name": "управлению ресурсами",
        "IsAnswer": false
      },
      {
        "Name": "интерфейсу системных вызовов",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В зависимости от особенностей используемого алгоритма управления процессором ОС разделяются на:",
    "Answers": [
      {
        "Name": "многозадачные и однозадачные ОС",
        "IsAnswer": true
      },
      {
        "Name": "32-х и 64-х разрядные",
        "IsAnswer": false
      },
      {
        "Name": "ОС реального времени и универсальные ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Обработкой системных запросов от приложений занимаются:",
    "Answers": [
      {
        "Name": "модули ядра",
        "IsAnswer": true
      },
      {
        "Name": "утилиты и подключаемые библиотеки",
        "IsAnswer": false
      },
      {
        "Name": "системные обрабатывающие программы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Слой ОС, который образуют программные модули, отражающие специфику аппаратной платформы компьютера называется:",
    "Answers": [
      {
        "Name": "машинно-зависимые компоненты ОС",
        "IsAnswer": true
      },
      {
        "Name": "средства аппаратной поддержки ОС",
        "IsAnswer": false
      },
      {
        "Name": "менеджеры ресурсов",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К какому виду ядер относится следующее утверждение: модули ядра работают в едином адресном пространстве и пользуются всеми функциями ядра?",
    "Answers": [
      {
        "Name": "К монолитному ядру",
        "IsAnswer": true
      },
      {
        "Name": "К микроядру",
        "IsAnswer": false
      },
      {
        "Name": "К экзоядру",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К преимуществам монолитной архитектуры ядра можно отнести:",
    "Answers": [
      {
        "Name": "скорость работы",
        "IsAnswer": true
      },
      {
        "Name": "надежность и отказоустойчивость",
        "IsAnswer": false
      },
      {
        "Name": "легкую преносимость с одной платформы на другую",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В привилегированном режиме работы выполняются:",
    "Answers": [
      {
        "Name": "ядро ОС",
        "IsAnswer": true
      },
      {
        "Name": "утилиты ОС",
        "IsAnswer": false
      },
      {
        "Name": "системные обрабатывающие программы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Блокируются ли в пользовательском режиме работы инструкции, связанные с привилегированным режимом?",
    "Answers": [
      {
        "Name": "нет",
        "IsAnswer": true
      },
      {
        "Name": "да",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Верно ли следующее утверждение: в пользовательском режиме работы, инструкция перехода в привилегированный режим всегда заблокирована?",
    "Answers": [
      {
        "Name": "да",
        "IsAnswer": true
      },
      {
        "Name": "нет",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Недостатком микроядерной архитектуры является:",
    "Answers": [
      {
        "Name": "производительность",
        "IsAnswer": true
      },
      {
        "Name": "ограничения на размер исходного кода",
        "IsAnswer": false
      },
      {
        "Name": "малая распространенность данного вида ядер",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Обладают ли ОС с микроядерной архитектурой возможностями к расширению?",
    "Answers": [
      {
        "Name": "да",
        "IsAnswer": true
      },
      {
        "Name": "нет",
        "IsAnswer": false
      },
      {
        "Name": "зависит от языка разработки",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Общение между сервисами микроядра происходит:",
    "Answers": [
      {
        "Name": "через вызовы к микроядру",
        "IsAnswer": true
      },
      {
        "Name": "напрямую",
        "IsAnswer": false
      },
      {
        "Name": "в данном общении нет необходимости",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "С чем связано увеличение надежности ОС с микроядерной архитектурой?",
    "Answers": [
      {
        "Name": "При возникновении ошибки в отдельном сервисе, он может быть легко перезапущен, без перезапуска всей системы",
        "IsAnswer": true
      },
      {
        "Name": "При выходе из строя ОС, ее можно быстро перезапустить",
        "IsAnswer": false
      },
      {
        "Name": "При разработке сервисов для микроядра сложнее допустить ошибку",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В микроядерной архитектуре в привелигированном режиме работает:",
    "Answers": [
      {
        "Name": "только микроядро",
        "IsAnswer": true
      },
      {
        "Name": "только сервисы ОС",
        "IsAnswer": false
      },
      {
        "Name": "ядро и сервисы ОС",
        "IsAnswer": false
      },
      {
        "Name": "только пользовательские программы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие из приведенных ниже ОС являются многозадачными?",
    "Answers": [
      {
        "Name": "Unix",
        "IsAnswer": true
      },
      {
        "Name": "Windows",
        "IsAnswer": true
      },
      {
        "Name": "iOS 10",
        "IsAnswer": true
      },
      {
        "Name": "MS-DOS",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Если с системой могут работать одновременно несколько человек, то ее называют:",
    "Answers": [
      {
        "Name": "многопользовательской",
        "IsAnswer": true
      },
      {
        "Name": "многозадачной",
        "IsAnswer": false
      },
      {
        "Name": "однопользовательской",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Гипервизор позволяет:",
    "Answers": [
      {
        "Name": "позволяет отделить ПО от нижележащей аппаратной инфраструктуры",
        "IsAnswer": true
      },
      {
        "Name": "увеличить скорость работы вычислительной системы",
        "IsAnswer": false
      },
      {
        "Name": "снизить нагрузку на центральный процессор",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В каком режиме происходит выполнение системного вызова?",
    "Answers": [
      {
        "Name": "В привилегированном",
        "IsAnswer": true
      },
      {
        "Name": "В пользовательском",
        "IsAnswer": false
      },
      {
        "Name": "В режиме отладки",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что позволяет преобразовывать номер системного вызова в функцию в ядре?",
    "Answers": [
      {
        "Name": "Таблица системных вызовов",
        "IsAnswer": true
      },
      {
        "Name": "Библиотека NTDLL",
        "IsAnswer": false
      },
      {
        "Name": "Режим выполнения системного вызова",
        "IsAnswer": false
      },
      {
        "Name": "Функция NtCreateEvent()",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Через какой механизм возможна передача параметров системного вызова?",
    "Answers": [
      {
        "Name": "Через стек",
        "IsAnswer": true
      },
      {
        "Name": "Через библиотеку NTDLL",
        "IsAnswer": false
      },
      {
        "Name": "Через реестр",
        "IsAnswer": false
      },
      {
        "Name": "Параметры в системном вызове не передаются",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Укажите возможную категорию системного вызова:",
    "Answers": [
      {
        "Name": "системный вызов по управлению памятью",
        "IsAnswer": true
      },
      {
        "Name": "системный вызов по управлению процессами",
        "IsAnswer": true
      },
      {
        "Name": "системный вызов для осуществления коммуникации",
        "IsAnswer": true
      }
    ]
  },
  {
    "Name": "При передаче параметров через регистры процессора:",
    "Answers": [
      {
        "Name": "передача происходит быстро",
        "IsAnswer": true
      },
      {
        "Name": "объем информации очень небольшой",
        "IsAnswer": true
      },
      {
        "Name": "передача происходит медленно",
        "IsAnswer": false
      },
      {
        "Name": "объем информации ограничен только объемом оперативной памяти",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что является вектором прерывания?",
    "Answers": [
      {
        "Name": "Адрес в памяти, где хранится программа-обработчик прерывания",
        "IsAnswer": true
      },
      {
        "Name": "Место в программе, куда она должна вернутся после обработки прерывания",
        "IsAnswer": false
      },
      {
        "Name": "Массив с описанием прерывания",
        "IsAnswer": false
      },
      {
        "Name": "Совокупность начальной и конечная точка прерывания",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое SVC-прерывание?",
    "Answers": [
      {
        "Name": "Программное прерывание по вызову супервизора",
        "IsAnswer": true
      },
      {
        "Name": "Прерывания по контролю (ошибке) программы",
        "IsAnswer": false
      },
      {
        "Name": "Прерывания ядра ОС",
        "IsAnswer": false
      },
      {
        "Name": "Прерывание по управлению SVC контроллером",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Основная особенность асинхронных прерываний:",
    "Answers": [
      {
        "Name": "это события, которые исходят от внешних источников",
        "IsAnswer": true
      },
      {
        "Name": "прерывания, которые нельзя перехватить",
        "IsAnswer": false
      },
      {
        "Name": "это SVC-прерывания",
        "IsAnswer": false
      },
      {
        "Name": "внутренние прерывания",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Пример немаскируемого прерывания:",
    "Answers": [
      {
        "Name": "если прерывание вызвано сбоем в микросхеме памяти",
        "IsAnswer": true
      },
      {
        "Name": "прерывание от поступления комбинации клавиш с клавиатуры",
        "IsAnswer": false
      },
      {
        "Name": "прерывание на вызов команды kill()",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "При прочих равных параметрах ОС с микроядром, по сравнению с ОС монолитным ядром, будет работать:",
    "Answers": [
      {
        "Name": "медленнее",
        "IsAnswer": true
      },
      {
        "Name": "немного быстрее",
        "IsAnswer": false
      },
      {
        "Name": "существенно быстрее",
        "IsAnswer": false
      },
      {
        "Name": "одинаково по скорости",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Всегда ли обработка прерывания связана с вызовом кода в ядре ОС?",
    "Answers": [
      {
        "Name": "Да, обработкой прерываний занимается ядро ОС",
        "IsAnswer": true
      },
      {
        "Name": "Это верно только для SVC-прерываний",
        "IsAnswer": false
      },
      {
        "Name": "Нет, возможно обойтись без вызова ядра при обработке прерываний",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что является стандартом функций для системных вызовов?",
    "Answers": [
      {
        "Name": "POSIX",
        "IsAnswer": true
      },
      {
        "Name": "UNIX",
        "IsAnswer": false
      },
      {
        "Name": "WinApi32",
        "IsAnswer": false
      },
      {
        "Name": "DLL",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Как называется специальная процедура, вызываемая по прерыванию для его выполнения?",
    "Answers": [
      {
        "Name": "Обработчик прерывания",
        "IsAnswer": true
      },
      {
        "Name": "Вектор прерывания",
        "IsAnswer": false
      },
      {
        "Name": "Номер прерывания",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Таблица системных вызовов, для обработки прерываний располагается:",
    "Answers": [
      {
        "Name": "в ядре операционной системы",
        "IsAnswer": true
      },
      {
        "Name": "в каждом процессе",
        "IsAnswer": false
      },
      {
        "Name": "в системных библиотеках",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что из нижеперечисленного включает в себя контекст процесса?",
    "Answers": [
      {
        "Name": "Содержимое стека",
        "IsAnswer": true
      },
      {
        "Name": "Исполняемый файл",
        "IsAnswer": false
      },
      {
        "Name": "История запуска аналогичных процессов",
        "IsAnswer": false
      },
      {
        "Name": "Выводимые процессом сообщения об ошибках",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какой размер виртуального адресного пространства процесса в 32 разрядных системах?",
    "Answers": [
      {
        "Name": "4 Гбайта",
        "IsAnswer": true
      },
      {
        "Name": "1 Гбайт",
        "IsAnswer": false
      },
      {
        "Name": "232 Мбайт",
        "IsAnswer": false
      },
      {
        "Name": "Размер не зависит от разрядности системы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Для чего используется сегмент стека процесса?",
    "Answers": [
      {
        "Name": "Для вызова функций",
        "IsAnswer": true
      },
      {
        "Name": "Для выделения динамической памяти",
        "IsAnswer": false
      },
      {
        "Name": "Для хранения исполняемого кода",
        "IsAnswer": false
      },
      {
        "Name": "Для управления процессом в ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что используется в подсистеме управления процессами для учета исполняемых процессов?",
    "Answers": [
      {
        "Name": "Таблица процессов",
        "IsAnswer": true
      },
      {
        "Name": "Блок управления процессом",
        "IsAnswer": false
      },
      {
        "Name": "Ссылки на открытые файлы",
        "IsAnswer": false
      },
      {
        "Name": "Подсистеме управления процессам не ведет учет исполняемых процессов",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Является ли EXE файл процессом?",
    "Answers": [
      {
        "Name": "нет",
        "IsAnswer": true
      },
      {
        "Name": "да",
        "IsAnswer": false
      },
      {
        "Name": "Да, если его запустили",
        "IsAnswer": false
      },
      {
        "Name": "Да, если выполнение неожиданно прервали",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Может ли процесс из состояния «Заблокирован/Ожидание» перейти сразу в состояние «Выполняется/Исполнение»?",
    "Answers": [
      {
        "Name": "Нет",
        "IsAnswer": true
      },
      {
        "Name": "да",
        "IsAnswer": false
      },
      {
        "Name": "Да, если других готовых процессов нет",
        "IsAnswer": false
      },
      {
        "Name": "Да, если у него высокий приоритет",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К многоразовым операциям относятся:",
    "Answers": [
      {
        "Name": "запуск процесса",
        "IsAnswer": true
      },
      {
        "Name": "создание процесса",
        "IsAnswer": false
      },
      {
        "Name": "завершение процесса",
        "IsAnswer": false
      },
      {
        "Name": "аварийное завершение процесса",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Чем является время, затраченное на переключение контекста?",
    "Answers": [
      {
        "Name": "Оно относится к накладным расходам в работе системы",
        "IsAnswer": true
      },
      {
        "Name": "Оно равно 0",
        "IsAnswer": false
      },
      {
        "Name": "Оно является полезным временем в работе системы",
        "IsAnswer": false
      },
      {
        "Name": "Оно мало, и им можно пренебречь",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "По каким причинам может произойти приостановка процесса?",
    "Answers": [
      {
        "Name": "Потребность процесса в завершении операции ввода/вывода",
        "IsAnswer": true
      },
      {
        "Name": "Процесс истратил временной интервал",
        "IsAnswer": true
      },
      {
        "Name": "Произошла критическая ошибка в процессе",
        "IsAnswer": false
      },
      {
        "Name": "Произошла критическая ошибка в ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какое событие может привести к остановке процесса?",
    "Answers": [
      {
        "Name": "Уничтожение другим процессом",
        "IsAnswer": true
      },
      {
        "Name": "Запуск другого процесса на выполнение",
        "IsAnswer": false
      },
      {
        "Name": "Повторный запуск этого же процесса",
        "IsAnswer": false
      },
      {
        "Name": "Процесс выполнил операцию вывода",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое процесс демон в ОС Unix?",
    "Answers": [
      {
        "Name": "Не интерактивный процесс",
        "IsAnswer": true
      },
      {
        "Name": "Процесс без родителя",
        "IsAnswer": false
      },
      {
        "Name": "Процесс, который пытается завершить другие процессы",
        "IsAnswer": false
      },
      {
        "Name": "Процесс с терминалом",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое процесс зомби в ОС Unix?",
    "Answers": [
      {
        "Name": "Завершившийся процесс с родителем",
        "IsAnswer": true
      },
      {
        "Name": "Процесс без родителя",
        "IsAnswer": false
      },
      {
        "Name": "Процесс, который пытается завершить другие процессы",
        "IsAnswer": false
      },
      {
        "Name": "Не интерактивный процесс",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что делает команда PS в системе Unix?",
    "Answers": [
      {
        "Name": "Выводит список процессов",
        "IsAnswer": true
      },
      {
        "Name": "Выводит список файлов",
        "IsAnswer": false
      },
      {
        "Name": "Выводит информацию о процессоре",
        "IsAnswer": false
      },
      {
        "Name": "Меняет статус процесса",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что делает команда СС в системе Unix?",
    "Answers": [
      {
        "Name": "Компиляция программы в исполняемый файл",
        "IsAnswer": true
      },
      {
        "Name": "Декомпиляция исполняемого файла в код",
        "IsAnswer": false
      },
      {
        "Name": "Копирование файлов",
        "IsAnswer": false
      },
      {
        "Name": "Завершение системы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Число, используемое при планировании исполнения процесса в операционной системе:",
    "Answers": [
      {
        "Name": "приоритет",
        "IsAnswer": true
      },
      {
        "Name": "идентификатор процесса",
        "IsAnswer": false
      },
      {
        "Name": "идентификатор пользователя, запустившего процесс",
        "IsAnswer": false
      },
      {
        "Name": "терминальная линия",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие системные вызовы используются для создания нового процесса в ОС Linux?",
    "Answers": [
      {
        "Name": "exec",
        "IsAnswer": true
      },
      {
        "Name": "run",
        "IsAnswer": false
      },
      {
        "Name": "createprocess",
        "IsAnswer": false
      },
      {
        "Name": "fork",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Чем ограничен размер стека в виртуальном адресном пространстве процесса Linux?",
    "Answers": [
      {
        "Name": "Началом региона mmap",
        "IsAnswer": true
      },
      {
        "Name": "Размером адресуемой памяти",
        "IsAnswer": false
      },
      {
        "Name": "Началом региона heap",
        "IsAnswer": false
      },
      {
        "Name": "Стек имеет фиксированный размер в 32 бита",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Как изменится объем адресуемого адресного пространства памяти при переходе от 32 разрядной архитектуры к 64 разрядной?",
    "Answers": [
      {
        "Name": "Увеличится с 4Гб до 16 млн Тб",
        "IsAnswer": true
      },
      {
        "Name": "Увеличится в два раза",
        "IsAnswer": false
      },
      {
        "Name": "Позволит адресоваться к более миллиарду Гб памяти",
        "IsAnswer": false
      },
      {
        "Name": "Размер адресного пространства не изменится",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какая конструкция в программировании может вызвать переполнение стека?",
    "Answers": [
      {
        "Name": "Рекурсия",
        "IsAnswer": true
      },
      {
        "Name": "Циклы",
        "IsAnswer": false
      },
      {
        "Name": "Массивы",
        "IsAnswer": false
      },
      {
        "Name": "Списки",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Процесс без терминала в ОС Unix:",
    "Answers": [
      {
        "Name": "это процесс демон",
        "IsAnswer": true
      },
      {
        "Name": "это процесс зомби",
        "IsAnswer": false
      },
      {
        "Name": "не может существовать",
        "IsAnswer": false
      },
      {
        "Name": "это системный процесс",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое краткосрочное планирование?",
    "Answers": [
      {
        "Name": "Это планирование использования процессора",
        "IsAnswer": true
      },
      {
        "Name": "Это процесс выгрузки процессов из оперативной памяти",
        "IsAnswer": false
      },
      {
        "Name": "Это операция загрузки страниц в оперативную память",
        "IsAnswer": false
      },
      {
        "Name": "Это операция дефрагментации диска",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какая задача НЕ включается в механизм управления ресурсами?",
    "Answers": [
      {
        "Name": "Увеличение ресурсов ВС",
        "IsAnswer": true
      },
      {
        "Name": "Планирование ресурса",
        "IsAnswer": false
      },
      {
        "Name": "Отслеживание состояния ресурса",
        "IsAnswer": false
      },
      {
        "Name": "Разрешение конфликтов между процессами",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "За счет сокращения времени, которое проводят процессы в состоянии готовности и количества заданий в очереди готовых процессов для загрузки, непосредственно уменьшается:",
    "Answers": [
      {
        "Name": "время ожидания",
        "IsAnswer": true
      },
      {
        "Name": "полное время выполнения",
        "IsAnswer": false
      },
      {
        "Name": "время отклика",
        "IsAnswer": false
      },
      {
        "Name": "время загрузки ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Если одно и то же задание выполняется приблизительно за одно и то же время, то можно говорить о:",
    "Answers": [
      {
        "Name": "предсказуемости алгоритма планирования",
        "IsAnswer": true
      },
      {
        "Name": "масштабируемости алгоритма планирования",
        "IsAnswer": false
      },
      {
        "Name": "равномерности загрузки ресурсов",
        "IsAnswer": false
      },
      {
        "Name": "минимизации накладных расходов",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "На что из ниже перечисленного влияет алгоритм управления процессором?",
    "Answers": [
      {
        "Name": "Является ли ОС системой разделения времени",
        "IsAnswer": true
      },
      {
        "Name": "Является ли система однопроцессорной или двухпроцессорной",
        "IsAnswer": false
      },
      {
        "Name": "Можно ли запустить несколько ОС на одном компьютере",
        "IsAnswer": false
      },
      {
        "Name": "Сколько памяти используют процессы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что является главной причиной смены состояния процессов?",
    "Answers": [
      {
        "Name": "Прерывания",
        "IsAnswer": true
      },
      {
        "Name": "Выделение памяти",
        "IsAnswer": false
      },
      {
        "Name": "Вызовы функций",
        "IsAnswer": false
      },
      {
        "Name": "Нехватка памяти",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какое из этих событий требует перераспределения процессорного времени?",
    "Answers": [
      {
        "Name": "Аппаратное прерывание",
        "IsAnswer": true
      },
      {
        "Name": "Запуск компьютера",
        "IsAnswer": false
      },
      {
        "Name": "Вывод сообщения программой",
        "IsAnswer": false
      },
      {
        "Name": "Выделение памяти под массив в теле программы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какая из очередей содержит процессы, ожидающие только процессора?",
    "Answers": [
      {
        "Name": "Очередь готовых",
        "IsAnswer": true
      },
      {
        "Name": "Очередь выполненных",
        "IsAnswer": false
      },
      {
        "Name": "Очередь ожидающих",
        "IsAnswer": false
      },
      {
        "Name": "Очередь ожидающих выполнения операции ввода/вывода",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Наименование дисциплины, при которой следующим для выполнения назначается поток с минимальным оценочным временем, требуемым для окончания его работы:",
    "Answers": [
      {
        "Name": "кратчайший процесс обслуживается первым",
        "IsAnswer": true
      },
      {
        "Name": "обслуживание в порядке поступления",
        "IsAnswer": false
      },
      {
        "Name": "карусельная",
        "IsAnswer": false
      },
      {
        "Name": "круговая",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Почему в современных системах не возможно выделить каждому событию свою очередь?",
    "Answers": [
      {
        "Name": "Из-за огромного количества различных событий",
        "IsAnswer": true
      },
      {
        "Name": "Так как в таких очередях не будет учитываться приоритет процесса",
        "IsAnswer": false
      },
      {
        "Name": "Из-за большого количества процессов, ожидающих важных событий",
        "IsAnswer": false
      },
      {
        "Name": "Из-за ограничений на размер оперативной памяти, который может использовать ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Является ли вызов функции в приложении отдельным потоком?",
    "Answers": [
      {
        "Name": "Нет, не является",
        "IsAnswer": true
      },
      {
        "Name": "Да, является",
        "IsAnswer": false
      },
      {
        "Name": "Да, если функция может принимать параметры по умолчанию",
        "IsAnswer": false
      },
      {
        "Name": "Да, если функция является рекурсивной (может вызываться сама из себя)",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие атрибуты процесса являются общими для потоков этого процесса?",
    "Answers": [
      {
        "Name": "Открытые файлы",
        "IsAnswer": true
      },
      {
        "Name": "Счетчик команд",
        "IsAnswer": false
      },
      {
        "Name": "Регистры",
        "IsAnswer": false
      },
      {
        "Name": "Стек",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие потоки работают быстрее?",
    "Answers": [
      {
        "Name": "Реализованные на уровне приложения",
        "IsAnswer": true
      },
      {
        "Name": "Реализованные на уровне ядра",
        "IsAnswer": false
      },
      {
        "Name": "Основной поток приложения (main)",
        "IsAnswer": false
      },
      {
        "Name": "Все виды поток работают одинаково по скорости",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие из этих задач нельзя выполнять в разных потоках одновременно?",
    "Answers": [
      {
        "Name": "Вывод на экран двух строк",
        "IsAnswer": true
      },
      {
        "Name": "Перерисовка экрана и процесс вычисления",
        "IsAnswer": false
      },
      {
        "Name": "Обработка большого массива данных с разделением его на части",
        "IsAnswer": false
      },
      {
        "Name": "Получение данных по сети в вывод информации на экран",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Как называется коллекция потоков, которые могут использоваться для выполнения нескольких задач в фоновом режиме:",
    "Answers": [
      {
        "Name": "пулл потоков",
        "IsAnswer": true
      },
      {
        "Name": "массив потоков",
        "IsAnswer": false
      },
      {
        "Name": "список потоков",
        "IsAnswer": false
      },
      {
        "Name": "потоковый менеджер",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что необходимо выполнить для создания вторичного потока в процессе Windows?",
    "Answers": [
      {
        "Name": "Вызвать системную функцию создания потока",
        "IsAnswer": true
      },
      {
        "Name": "Вызвать системную функцию создания процесса",
        "IsAnswer": false
      },
      {
        "Name": "Создать переменную типа поток",
        "IsAnswer": false
      },
      {
        "Name": "Реализовать функцию потока",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "На основании чего происходит планирование выполнения в ОС Windows:",
    "Answers": [
      {
        "Name": "планирование потоков",
        "IsAnswer": true
      },
      {
        "Name": "планирование процессов",
        "IsAnswer": false
      },
      {
        "Name": "планирование процессоров",
        "IsAnswer": false
      },
      {
        "Name": "планирование пользователей",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое «переходное состояние» нити в ОС Windows?",
    "Answers": [
      {
        "Name": "Это состояние, при котором нить не ожидает событий, но ресурсов для ее выполнения еще не выделено",
        "IsAnswer": true
      },
      {
        "Name": "Это состояние, при котором нить ожидает какого либо события",
        "IsAnswer": false
      },
      {
        "Name": "Это состояние, когда выполнение нити закончено, но она еще не уничтожена",
        "IsAnswer": false
      },
      {
        "Name": "Это состояние, при котором нить переходит в процесс",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Чем отличаются состояния нити «Готовность» и «Первоочередная готовность» ОС Windows:",
    "Answers": [
      {
        "Name": "доп.состояние используется для ускорения выбора нити на выполнение, из всех нитей в состоянии готовность, одна будет в состояния первоочередная готовность",
        "IsAnswer": true
      },
      {
        "Name": "когда две нити полностью исполнены, та нить, которая исполнилась раньше обладает состоянием первоочередная готовность",
        "IsAnswer": false
      },
      {
        "Name": "в состоянии готовность у нити есть все ресурсы, кроме процессорного времени, в состоянии первоочередная готовность у нити есть все ресурсы, включая процессорное время",
        "IsAnswer": false
      },
      {
        "Name": "различие состояний нужно для разделения приоритетов нитей, первоочередная готовность – это нить с большим приоритетом",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Вызов какой функции в WinAPI в ОС Windows служит для создания нити:",
    "Answers": [
      {
        "Name": "CreateThread",
        "IsAnswer": true
      },
      {
        "Name": "ThreadFunc",
        "IsAnswer": false
      },
      {
        "Name": "CreateNiti",
        "IsAnswer": false
      },
      {
        "Name": "CreateNewThread",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Как называется процесс, при котором происходит просмотр очередей процессов и при котором решается вопрос, о том, какая задача будет выполняться следующей:",
    "Answers": [
      {
        "Name": "Перепланировка",
        "IsAnswer": true
      },
      {
        "Name": "Сортировка",
        "IsAnswer": false
      },
      {
        "Name": "Выгрузка",
        "IsAnswer": false
      },
      {
        "Name": "Краткострочное упорядочивание",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В какое из состояний процесс или нить не может перейти напрямую из состояния ожидание",
    "Answers": [
      {
        "Name": "Выполнение",
        "IsAnswer": true
      },
      {
        "Name": "Готовность",
        "IsAnswer": false
      },
      {
        "Name": "Переходное состояние",
        "IsAnswer": false
      },
      {
        "Name": "Выгружен",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие события НЕ требуют перераспределения процессорного времени:",
    "Answers": [
      {
        "Name": "Вызов функции процесса при его выполнении",
        "IsAnswer": true
      },
      {
        "Name": "Задача выполнила системный вызов",
        "IsAnswer": false
      },
      {
        "Name": "Внутреннее прерывание",
        "IsAnswer": false
      },
      {
        "Name": "Внешнее (аппаратное) прерывание",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие операционные системы имеют встроенную поддержку поток в ядре ОС:",
    "Answers": [
      {
        "Name": "Windows",
        "IsAnswer": true
      },
      {
        "Name": "Linux",
        "IsAnswer": true
      },
      {
        "Name": "Ubuntu",
        "IsAnswer": true
      },
      {
        "Name": "UNIX",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие элементы процесса общие для потоков этого процесса:",
    "Answers": [
      {
        "Name": "Открытые файлы",
        "IsAnswer": true
      },
      {
        "Name": "Состояние",
        "IsAnswer": false
      },
      {
        "Name": "Регистры",
        "IsAnswer": false
      },
      {
        "Name": "Счетчик команд",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Ситуация, в которой два и более процесса считывают или записывают данные одновременно и конечный результат зависит от того, какой из них был первым называется:",
    "Answers": [
      {
        "Name": "состязание процессов",
        "IsAnswer": true
      },
      {
        "Name": "синхронизация процессов",
        "IsAnswer": false
      },
      {
        "Name": "распределение ресурсов",
        "IsAnswer": false
      },
      {
        "Name": "борьба за ресурсы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое критическая область в процессах:",
    "Answers": [
      {
        "Name": "в этой области процессы обращаются к совместному ресурсу",
        "IsAnswer": true
      },
      {
        "Name": "в этой области процесс не может быть прерван",
        "IsAnswer": false
      },
      {
        "Name": "в этой области процесс использует функции ядра",
        "IsAnswer": false
      },
      {
        "Name": "в этой области процесс не может захватывать ресурсы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Средства синхронизации, реализованные в виде программной системы, назначением которой является решение конкретной задачи синхронизации, называются:",
    "Answers": [
      {
        "Name": "высокоуровневыми",
        "IsAnswer": true
      },
      {
        "Name": "низкоуровневыми",
        "IsAnswer": false
      },
      {
        "Name": "машинно-ориентированными",
        "IsAnswer": false
      },
      {
        "Name": "программно-аппаратными",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Все ли высокоуровневые средства синхронизации можно реализовать используя низкоуровневые средства:",
    "Answers": [
      {
        "Name": "да",
        "IsAnswer": true
      },
      {
        "Name": "нет, сложность реализации будет огромной",
        "IsAnswer": false
      },
      {
        "Name": "да, но сложность реализации будет огромной",
        "IsAnswer": false
      },
      {
        "Name": "нет, так как придётся задействовать аппаратные средства синхронизации",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Укажите верные условия правильного использования общих данных:",
    "Answers": [
      {
        "Name": "процесс, находящийся вне критической области, не может блокировать другие процессы",
        "IsAnswer": true
      },
      {
        "Name": "два процесса должны одновременно находится в критической области",
        "IsAnswer": false
      },
      {
        "Name": "в программе должны быть предположения о скорости работы её параллельных частей",
        "IsAnswer": false
      },
      {
        "Name": "процесс должен бесконечно долго ждать попадание в критическую область",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Средство, которое запрещает одновременное исполнение двух (и более) команд, которые обращаются к одной и той же ячейке памяти называется:",
    "Answers": [
      {
        "Name": "блокировка памяти",
        "IsAnswer": true
      },
      {
        "Name": "запрет использования команд",
        "IsAnswer": false
      },
      {
        "Name": "проверка и установка",
        "IsAnswer": false
      },
      {
        "Name": "запрет прерываний",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Могут ли сигналы использоваться как средства синхронизации процессов:",
    "Answers": [
      {
        "Name": "да, любое средство уведомления процессов может использоваться для синхронизации",
        "IsAnswer": true
      },
      {
        "Name": "нет, это средство уведомления об ошибках",
        "IsAnswer": false
      },
      {
        "Name": "нет, это очень примитивные средства, не предназначенные для синхронизации",
        "IsAnswer": false
      },
      {
        "Name": "да, но только для синхронизации процессов в операционной системе",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какая функция WinAPI используется для установки события:",
    "Answers": [
      {
        "Name": "SetEvent",
        "IsAnswer": true
      },
      {
        "Name": "WaitForSingleObject",
        "IsAnswer": false
      },
      {
        "Name": "GetEvent",
        "IsAnswer": false
      },
      {
        "Name": "CreateEvent",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Каким способом можно избежать негативных моментов при синхронизации методом запрета прерываний:",
    "Answers": [
      {
        "Name": "ввести переменную состояния",
        "IsAnswer": true
      },
      {
        "Name": "ввести приоритеты",
        "IsAnswer": false
      },
      {
        "Name": "ввести глобальную переменную",
        "IsAnswer": false
      },
      {
        "Name": "задействовать дополнительные ядра процессора",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К программным реализация взаимоисключений относятся:",
    "Answers": [
      {
        "Name": "мониторы",
        "IsAnswer": true
      },
      {
        "Name": "семафоры",
        "IsAnswer": true
      },
      {
        "Name": "блокировки памяти",
        "IsAnswer": false
      },
      {
        "Name": "сигналы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Самая главная особенность операций Up и Down семафоров:",
    "Answers": [
      {
        "Name": "они не могут быть прерваны",
        "IsAnswer": true
      },
      {
        "Name": "они меняют значение только на единицу",
        "IsAnswer": false
      },
      {
        "Name": "их можно вызвать несколько раз",
        "IsAnswer": false
      },
      {
        "Name": "они должны вызываться последовательно",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Mutex - это:",
    "Answers": [
      {
        "Name": "семафор с двумя состояниями",
        "IsAnswer": true
      },
      {
        "Name": "упрощённая версия монитора",
        "IsAnswer": false
      },
      {
        "Name": "упрощённая версия критической секции",
        "IsAnswer": false
      },
      {
        "Name": "семафор с четырмя состояниями",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какое высокоуровневое средство синхронизации строиться на принципах ООП:",
    "Answers": [
      {
        "Name": "монитор",
        "IsAnswer": true
      },
      {
        "Name": "семафор",
        "IsAnswer": false
      },
      {
        "Name": "класс",
        "IsAnswer": false
      },
      {
        "Name": "поток",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какой их перечисленных ниже примеров может быть реализован в виде задач параллельной обработки:",
    "Answers": [
      {
        "Name": "поиск простых чисел",
        "IsAnswer": true
      },
      {
        "Name": "расчёт сложной формулы, состоящий из большого числа операндов",
        "IsAnswer": false
      },
      {
        "Name": "подсчёт контрольных сумм",
        "IsAnswer": false
      },
      {
        "Name": "дефрагментация информации",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В чём сходство между способами синхронизации «блокировкой памяти» и «запретом прервываний»:",
    "Answers": [
      {
        "Name": "оба способа блокируют некоторые системные вызовы/команды",
        "IsAnswer": true
      },
      {
        "Name": "в обоих случаях используются возможности оперативной памяти",
        "IsAnswer": false
      },
      {
        "Name": "оба способа являются высокоуровневыми средствами синхронизации",
        "IsAnswer": false
      },
      {
        "Name": "оба способа позволяют монопольно захватить процессор",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Основным способом борьбы с состязанием процессов является:",
    "Answers": [
      {
        "Name": "критические области",
        "IsAnswer": true
      },
      {
        "Name": "глобальные переменные",
        "IsAnswer": false
      },
      {
        "Name": "предположения о скорости работы программы на этапе её разработки",
        "IsAnswer": false
      },
      {
        "Name": "таймеры",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Необходимо реализовать синхронизацию 5 различных потоков, при этом одновременно могут работать потоки 1 и 3, 1 и 4, 2 и 5 или только одновременно 3,4 и 5, какой способ синхронизации для данной задаче будет оптимальным:",
    "Answers": [
      {
        "Name": "монитор",
        "IsAnswer": true
      },
      {
        "Name": "мьютекс",
        "IsAnswer": false
      },
      {
        "Name": "сигналы",
        "IsAnswer": false
      },
      {
        "Name": "семафор с четырмя состояниями",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Сколько необходимо сигналов для оптимальной синхронизации 3-х процессов:",
    "Answers": []
  },
  {
    "Name": "Всегда ли параллельные процессы находятся в состоянии состязаний:",
    "Answers": [
      {
        "Name": "нет",
        "IsAnswer": true
      },
      {
        "Name": "да",
        "IsAnswer": false
      },
      {
        "Name": "это зависит от операционной системы",
        "IsAnswer": false
      },
      {
        "Name": "это зависит от вычислительной системы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Межпроцессное зваимодействие применяется для обмена информацией:",
    "Answers": [
      {
        "Name": "в любых потоках любых процессов",
        "IsAnswer": true
      },
      {
        "Name": "только потоках одного процесса",
        "IsAnswer": false
      },
      {
        "Name": "только в потоках разных процессов",
        "IsAnswer": false
      },
      {
        "Name": "только в процессах\nверно",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Может ли через межпроцессное взаимодействие один процесс повлиять на ход выполнения другого процесса:",
    "Answers": [
      {
        "Name": "да, но только если это предусмотрено разработчиком другого процесса",
        "IsAnswer": true
      },
      {
        "Name": "нет, это противоречит концепции процессов",
        "IsAnswer": false
      },
      {
        "Name": "нет, один процесс ни как не может влиять на ход выполнения другого процесса",
        "IsAnswer": false
      },
      {
        "Name": "да, если только один из процессов – это процесс ОС",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Укажите причину необходимости межпроцессного взаимодействия:",
    "Answers": [
      {
        "Name": "совместно использование данных",
        "IsAnswer": true
      },
      {
        "Name": "разработка монолитных систем",
        "IsAnswer": false
      },
      {
        "Name": "отделение пользователей приложения друг от друга",
        "IsAnswer": false
      },
      {
        "Name": "упрощение процесса разработке ПО",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Когда общение двух процессов происходит через линии связи, такой способ относится к категории:",
    "Answers": [
      {
        "Name": "канальных",
        "IsAnswer": true
      },
      {
        "Name": "сигнальных",
        "IsAnswer": false
      },
      {
        "Name": "сетевых",
        "IsAnswer": false
      },
      {
        "Name": "операционных",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Если два или более процессов совместно используют некоторую область адресного пространства друг друга, такой способ относится к категории:",
    "Answers": [
      {
        "Name": "разделяемой памяти",
        "IsAnswer": true
      },
      {
        "Name": "сетевых",
        "IsAnswer": false
      },
      {
        "Name": "канальных",
        "IsAnswer": false
      },
      {
        "Name": "разделяемых данных",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое «почтовый ящик», как средство межпроцессного обмена:",
    "Answers": [
      {
        "Name": "это совокупность информационной части и нескольких буферов, к которых помещаются сообщения",
        "IsAnswer": true
      },
      {
        "Name": "это информационная структура, поддерживаемая операционной системой",
        "IsAnswer": true
      },
      {
        "Name": "это обычный буфер обмена операционной системы",
        "IsAnswer": false
      },
      {
        "Name": "особый вид разделяемой памяти",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Когда эффективнее не передавать данные непосредственно, а отправлять в почтовый ящик сообщение, информирующее процесс-получатель о том, где можно их найти:",
    "Answers": [
      {
        "Name": "когда объем данных велик",
        "IsAnswer": true
      },
      {
        "Name": "если в данных содержаться информация об адресах",
        "IsAnswer": false
      },
      {
        "Name": "когда получатель данных не определён",
        "IsAnswer": false
      },
      {
        "Name": "когда данные содержат результат обработки",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "За функционирование почтового ящик отвечает:",
    "Answers": [
      {
        "Name": "операционная система",
        "IsAnswer": true
      },
      {
        "Name": "процесс создатель ящика",
        "IsAnswer": false
      },
      {
        "Name": "процесс пользователь ящика",
        "IsAnswer": false
      },
      {
        "Name": "организация оперативной памяти в системе",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "При использовании почтовых ящиков процессы:",
    "Answers": [
      {
        "Name": "процессам не нужно знать о существовании друг друга",
        "IsAnswer": true
      },
      {
        "Name": "становятся жестко связаны друг с другом",
        "IsAnswer": false
      },
      {
        "Name": "операционная система является каналом передачи сообщений",
        "IsAnswer": false
      },
      {
        "Name": "работа процесса отправителя останавливается при занятости процесса получателя",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "К недостаткам буферов сообщений относятся:",
    "Answers": [
      {
        "Name": "появление ещё одного ресурса в ОС, которым нужно управлять",
        "IsAnswer": true
      },
      {
        "Name": "статический размер буфера для передач",
        "IsAnswer": true
      },
      {
        "Name": "не фиксированность размера такого буфера, что усложняет его управление",
        "IsAnswer": false
      },
      {
        "Name": "вовлечение в передачу операционной системы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Укажите верную последовательность вызовов для сокета на клиенте:",
    "Answers": [
      {
        "Name": "socket – connect – write/read – close",
        "IsAnswer": true
      },
      {
        "Name": "socket – bind - write/read – close",
        "IsAnswer": false
      },
      {
        "Name": "socket – listen– write/read – close",
        "IsAnswer": false
      },
      {
        "Name": "socket – write/read – close",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "По какому принципу работают конвейеры:",
    "Answers": [
      {
        "Name": "FIFO",
        "IsAnswer": true
      },
      {
        "Name": "LIFO",
        "IsAnswer": false
      },
      {
        "Name": "FILO",
        "IsAnswer": false
      },
      {
        "Name": "LILO",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Чем механизм вида «почтовый ящик» отличаются от очередей сообщений:",
    "Answers": [
      {
        "Name": "очереди сообщений предоставляют возможность использовать несколько дисциплин обработки сообщений",
        "IsAnswer": true
      },
      {
        "Name": "предоставляют возможность читать одно сообщение несколько раз, если оно не удаляется",
        "IsAnswer": true
      },
      {
        "Name": "в очередях присутствует только адрес в памяти и размер сообщения, а не оно само",
        "IsAnswer": true
      },
      {
        "Name": "для создания очередей не требуется вызов функций операционной системы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Средство межпроцессного обмена канал:",
    "Answers": [
      {
        "Name": "Это поток данных между двумя или несколькими процессами, позволяющий читать или записывать данные (по аналогии работы с файлом)",
        "IsAnswer": true
      },
      {
        "Name": "это обычный файл, к которому доступ на запись имеет один процесс, остальные имеют доступ только на чтение",
        "IsAnswer": false
      },
      {
        "Name": "это однонаправленный поток данных от источника к приёмнику",
        "IsAnswer": false
      },
      {
        "Name": "это особый вид очередей",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Чем отличаются каналы в ОС Windows и Unix:",
    "Answers": [
      {
        "Name": "Каналы в Unix – это особый вид файлов, в Windows дизайн каналов смещён к «клиент-серверному» взаимодействию",
        "IsAnswer": true
      },
      {
        "Name": "Каналы во всех операционных системах реализованы одинаково",
        "IsAnswer": false
      },
      {
        "Name": "Каналы в Unix – это именованные каналы, каналы в Windows – это неименованные каналы",
        "IsAnswer": false
      },
      {
        "Name": "Unix поддерживает только однонаправленные каналы, Windows как одно, так и двунаправленные",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие виды адресов НЕ используются при сетевом взаимодействии:",
    "Answers": [
      {
        "Name": "Email адреса",
        "IsAnswer": true
      },
      {
        "Name": "Локальный адрес узла",
        "IsAnswer": false
      },
      {
        "Name": "IP адрес",
        "IsAnswer": false
      },
      {
        "Name": "Символьный идентификатор-имя",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какой адрес зарезервирован для обратной связи с узлом, без реальной отправки пакетов по сети:",
    "Answers": [
      {
        "Name": "127.0.0.1 (loopback)",
        "IsAnswer": true
      },
      {
        "Name": "192.168.255.255 (broadcast)",
        "IsAnswer": false
      },
      {
        "Name": "10.10.10.255 (multicast)",
        "IsAnswer": false
      },
      {
        "Name": "10.0.0.1 (localnet)",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Для чего предназначен протокол DHCP:",
    "Answers": [
      {
        "Name": "для динамического назначению IP-адресов",
        "IsAnswer": true
      },
      {
        "Name": "для поиска IP-адреса по символьному имени узла",
        "IsAnswer": false
      },
      {
        "Name": "для самоидентификации узлов по группам",
        "IsAnswer": false
      },
      {
        "Name": "для обмена файлами по сети",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какой ресурс выделяет система программе для связи с другими приложениям:",
    "Answers": [
      {
        "Name": "порт",
        "IsAnswer": true
      },
      {
        "Name": "IP адрес",
        "IsAnswer": false
      },
      {
        "Name": "MAC адрес",
        "IsAnswer": false
      },
      {
        "Name": "уникальное имя",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какой номер порта используется по умолчанию для протокола FTP:",
    "Answers": []
  },
  {
    "Name": "Какой способ обмена информацией между процессами не обладает средствами синхронизации:",
    "Answers": [
      {
        "Name": "не один из ранее названных, все они имеют средства синхронизации",
        "IsAnswer": true
      },
      {
        "Name": "каналы",
        "IsAnswer": false
      },
      {
        "Name": "файлы",
        "IsAnswer": false
      },
      {
        "Name": "сокеты",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какая команда блокирует процесс, до тех пор, пока в буфер не поступит ответ для средства межпроцессного обмена почтовый ящик",
    "Answers": [
      {
        "Name": "WAIT_ANSWER",
        "IsAnswer": true
      },
      {
        "Name": "SEND_MESSAGE",
        "IsAnswer": false
      },
      {
        "Name": "WAIT_MESSAGE",
        "IsAnswer": false
      },
      {
        "Name": "SEND_ANSWER",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какая особенность присуща только для сетевого взаимодействия процессов:",
    "Answers": [
      {
        "Name": "множество посредников, функционирующих под разными ОС",
        "IsAnswer": true
      },
      {
        "Name": "обмен информацией происходит посредством передачи данных определённого формата",
        "IsAnswer": false
      },
      {
        "Name": "необходимость наличия уникального идентификатора",
        "IsAnswer": false
      },
      {
        "Name": "разделение канала несколькими процессами",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "За сопоставление символьного и IP адреса узла отвечает:",
    "Answers": [
      {
        "Name": "прямая зона DNS",
        "IsAnswer": true
      },
      {
        "Name": "обратная зона DNS",
        "IsAnswer": false
      },
      {
        "Name": "интернет браузер",
        "IsAnswer": false
      },
      {
        "Name": "прямая зона DHCP",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Адреса, которые назначаются производителями сетевого оборудования:",
    "Answers": [
      {
        "Name": "MAC адрес",
        "IsAnswer": true
      },
      {
        "Name": "IP адрес",
        "IsAnswer": false
      },
      {
        "Name": "DNS адрес",
        "IsAnswer": false
      },
      {
        "Name": "Виртуальный адрес",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что относится к функция ОС по управлению памятью:",
    "Answers": [
      {
        "Name": "отслеживание свободной и занятой памяти",
        "IsAnswer": true
      },
      {
        "Name": "отображение адресов программ на конкретную область физической памяти",
        "IsAnswer": true
      },
      {
        "Name": "завершение процессов не оптимально использующих память",
        "IsAnswer": false
      },
      {
        "Name": "вытеснение программ из вычислительной системы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какие адреса используются для идентификации переменных и команд в программе:",
    "Answers": [
      {
        "Name": "символьные имена",
        "IsAnswer": true
      },
      {
        "Name": "виртуальные адреса",
        "IsAnswer": true
      },
      {
        "Name": "физические адреса",
        "IsAnswer": true
      },
      {
        "Name": "мобильные адреса",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В какой момент в программе появляются виртуальные адреса:",
    "Answers": [
      {
        "Name": "в момент трансляции",
        "IsAnswer": true
      },
      {
        "Name": "только в момент исполнения",
        "IsAnswer": false
      },
      {
        "Name": "в момент компиляции",
        "IsAnswer": false
      },
      {
        "Name": "только в момент разработки программы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Виртуализация оперативной памяти включает решение следующих задач:",
    "Answers": [
      {
        "Name": "перемещение данных между памятью и диском",
        "IsAnswer": true
      },
      {
        "Name": "выделение процессу виртуальных адресов",
        "IsAnswer": false
      },
      {
        "Name": "запись данных на виртуальные устройства",
        "IsAnswer": false
      },
      {
        "Name": "разделение памяти процесса на команды и данные",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Кто принимает участие в организации работы виртуальной памяти:",
    "Answers": [
      {
        "Name": "операционная система",
        "IsAnswer": true
      },
      {
        "Name": "аппаратура",
        "IsAnswer": true
      },
      {
        "Name": "приложения",
        "IsAnswer": false
      },
      {
        "Name": "программист",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Выберете верное утверждение для виртуального адресного пространства:",
    "Answers": [
      {
        "Name": "каждый процесс имеет собственное виртуальное адресное пространство",
        "IsAnswer": true
      },
      {
        "Name": "единое для всех процессов, запущенных в ОС",
        "IsAnswer": false
      },
      {
        "Name": "разделено поровну между процессами",
        "IsAnswer": false
      },
      {
        "Name": "полностью принадлежит операционной системе",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Могут ли у процессов быть одинаковые виртуальные адреса:",
    "Answers": [
      {
        "Name": "да, но это не может привести к конфликтам",
        "IsAnswer": true
      },
      {
        "Name": "нет",
        "IsAnswer": false
      },
      {
        "Name": "да, и это может привести к конфликтам",
        "IsAnswer": false
      },
      {
        "Name": "да, если они не присутствуют в памяти одновременно",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Чем ограничено максимально возможное виртуальное адресное пространство процесса:",
    "Answers": [
      {
        "Name": "разрядностью центрального процессора",
        "IsAnswer": true
      },
      {
        "Name": "размерами оперативной памяти",
        "IsAnswer": false
      },
      {
        "Name": "не ограничено ни чем",
        "IsAnswer": false
      },
      {
        "Name": "размерами жесткого диска",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какое самая важная характеристика такого механизма обмена информацией, как разделяемой памяти :",
    "Answers": [
      {
        "Name": "скорость обмена",
        "IsAnswer": true
      },
      {
        "Name": "простота с разработке",
        "IsAnswer": false
      },
      {
        "Name": "отсутствие ограничений",
        "IsAnswer": false
      },
      {
        "Name": "отсутствие ошибок",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Команды WinApi для использования разделяемой памяти:",
    "Answers": [
      {
        "Name": "CreateFileMapping",
        "IsAnswer": true
      },
      {
        "Name": "MapViewOfFile",
        "IsAnswer": true
      },
      {
        "Name": "MemCpy",
        "IsAnswer": false
      },
      {
        "Name": "MemoryLeak",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какая память самая быстрая в компьютерах:",
    "Answers": [
      {
        "Name": "регистры процессора",
        "IsAnswer": true
      },
      {
        "Name": "оперативная память",
        "IsAnswer": false
      },
      {
        "Name": "жесткий диск",
        "IsAnswer": false
      },
      {
        "Name": "буфер жесткого диска",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В какой закономерности находятся объем запоминающего устройства и скорость его работы:",
    "Answers": [
      {
        "Name": "чем меньше объем ЗУ, тем больше скорость его работы",
        "IsAnswer": true
      },
      {
        "Name": "чем меньше объем ЗУ, тем меньше скорость работы",
        "IsAnswer": false
      },
      {
        "Name": "объем ЗУ и скорость его работы ни как не связаны",
        "IsAnswer": false
      },
      {
        "Name": "чем больше объем ЗУ, тем больше скорость его работы",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "От чего зависит эффективность кэширования:",
    "Answers": [
      {
        "Name": "от частоты нахождения данных в кэше",
        "IsAnswer": true
      },
      {
        "Name": "от объёма кэш памяти",
        "IsAnswer": false
      },
      {
        "Name": "от скорость кэш памяти",
        "IsAnswer": false
      },
      {
        "Name": "от типа основного ЗУ",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Механизм, при котором каждый запрос к основной памяти просматривает кэш, и при отсутствии данных, записывает только в основную память а если данные найдены – то запись происходит и в основную память и в кэш называется:",
    "Answers": [
      {
        "Name": "сквозной записью",
        "IsAnswer": true
      },
      {
        "Name": "обратной записью",
        "IsAnswer": false
      },
      {
        "Name": "прямой записью",
        "IsAnswer": false
      },
      {
        "Name": "сквозной обратной записью",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Что такое кэш-попадание:",
    "Answers": [
      {
        "Name": "если данные найдены в кэш памяти",
        "IsAnswer": true
      },
      {
        "Name": "если данные не найдены в кэш памяти",
        "IsAnswer": false
      },
      {
        "Name": "если данные найдены и в основной и в кеш памяти",
        "IsAnswer": false
      },
      {
        "Name": "если данные переносятся из кэш памяти в основную",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "В чём главное отличие оперативной памяти от внешней:",
    "Answers": [
      {
        "Name": "необходимость постоянного электропитания",
        "IsAnswer": true
      },
      {
        "Name": "объём",
        "IsAnswer": false
      },
      {
        "Name": "скорость работы",
        "IsAnswer": false
      },
      {
        "Name": "наличие механизмов исправления ошибок",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Как изменится объем адресуемого адресного пространства памяти при переходе от 32 разрядной архитектуры к 64 разрядной:",
    "Answers": [
      {
        "Name": "увеличится с 4Гб до 16 млн. Тб",
        "IsAnswer": true
      },
      {
        "Name": "увеличится в два раза",
        "IsAnswer": false
      },
      {
        "Name": "позволит адресоваться к более миллиарду Гб памяти",
        "IsAnswer": false
      },
      {
        "Name": "размер адресного пространства не изменится",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какой способ обмена информацией между процессами не обладает средствами синхронизации:",
    "Answers": [
      {
        "Name": "разделяемая память",
        "IsAnswer": true
      },
      {
        "Name": "файлы",
        "IsAnswer": false
      },
      {
        "Name": "сокеты",
        "IsAnswer": false
      }
    ]
  },
  {
    "Name": "Какое из этих двух утверждений верно?",
    "Answers": [
      {
        "Name": "виртуальные адреса заменяются на физические во время выполнения программы в момент обращения по данному виртуальному адресу",
        "IsAnswer": true
      },
      {
        "Name": "все виртуальные адреса заменяются на физические во время загрузки программы в оперативную память",
        "IsAnswer": false
      },
      {
        "Name": "оба утверждения верны",
        "IsAnswer": false
      },
      {
        "Name": "ни одно утверждение не верно",
        "IsAnswer": false
      }
    ]
  }
]